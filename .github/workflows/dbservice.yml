# This is a demo workflow to run the tests with database set up

name: tests in matrix
on:
  pull_request:
    branches:
      - master
    paths:
      - 'src/test/resources/test-ds2.xml' 
      - 'src/test/java/org/jboss/as/quickstarts/kitchensink/test/MemberRegistrationIT2.java' 

jobs:
  matrix_with_db:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kitchensink-quickstart-test
        ports:
        # will assign a random free host port
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        java: [8, 11]

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Set up Java to ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}

    - name: Download wildfly server and start the testing
      run: |
        wget -q https://download.jboss.org/wildfly/19.0.0.Final/wildfly-19.0.0.Final.zip
        unzip -q wildfly-19.0.0.Final.zip
        JBOSS_HOME="$GITHUB_WORKSPACE/wildfly-19.0.0.Final"
        export JBOSS_HOME
        wget -q -O postgresql.jar https://repo1.maven.org/maven2/org/postgresql/postgresql/42.2.9.jre7/postgresql-42.2.9.jre7.jar
        cp -r modules/* $GITHUB_WORKSPACE/wildfly-19.0.0.Final/modules/system/layers/base/
        mv postgresql.jar $GITHUB_WORKSPACE/wildfly-19.0.0.Final/modules/system/layers/base/org/postgresql/main/
        cp standalone-full.xml $GITHUB_WORKSPACE/wildfly-19.0.0.Final/standalone/configuration/
        echo "JBOSS_HOME: $JBOSS_HOME"
        java --version
        mvn --version
        mvn clean test -B -Parq-managed -Dtest=MemberRegistrationIT2

