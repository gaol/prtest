# This is a demo workflow to run the tests with database set up

name: test with db service
on:
  pull_request:
    branches:
      - master
    paths:
      - 'src/test/resources/test2-ds.xml' 
      - 'src/test/java/org/jboss/as/quickstarts/kitchensink/test/MemberRegistrationIT2.java' 

jobs:
  with_db:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kitchensink-quickstart-test
        ports:
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      wildfly:
        image: jboss/wildfly:19.0.0.Final
        volumes:
          - $GITHUB_WORKSPACE/modules/org/postgresql:/opt/jboss/wildfly/modules/system/layers/base/org/postgresql/
        ports:
          - 8080/tcp
          - 9990/tcp
        options: --name wildfly --health-cmd "curl -s http://localhost:9990/health" --health-interval 10s --health-timeout 5s --health-retries 5 --entrypoint /opt/jboss/wildfly/bin/standalone.sh -b 0.0.0.0 -bmanagement 0.0.0.0

    strategy:
      matrix:
        java: [8, 11]

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Set up Java to ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}

    - name: Set up postgresql jdbc driver for wildfly server
      run: |
        docker exec wildfly /opt/jboss/wildfly/bin/add-user.sh -e -u admin -p admin -s
        docker exec wildfly /opt/jboss/wildfly/bin/jboss-cli.sh -c --command="/subsystem=datasources/jdbc-driver=postgresql:add(driver-name=postgresql,driver-module-name=org.postgresql,driver-xa-datasource-class-name=org.postgresql.xa.PGXADataSource)"

    - name: Running the test
      run: mvn clean test -B --no-transfer-progress -Parq-remote -Darquillian.launch=wildfly-remote -Dtest=MemberRegistrationIT2

